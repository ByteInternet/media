%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.4 (Build 14E46) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 408 100
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 408 100
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 100 m
408 100 l
408 0 l
0 0 l
h
0 100 m
W*
0 100 m
408 100 l
408 0 l
0 0 l
0 100 l
h
0 100 m
W*
0 0 408 100 rc
-10 110 m
418 110 l
418 -10 l
-10 -10 l
h
f
Q
0.0078431377 0.25098041 0.40000001 sc
q
0 100 m
408 100 l
408 0 l
0 0 l
h
0 100 m
W*
66.417999 65.678001 m
65.639999 65.678001 65.008003 65.047997 65.008003 64.269997 c
65.008003 51.307999 l
43.52 51.307999 l
43.52 64.269997 l
43.52 65.047997 42.888 65.678001 42.110001 65.678001 c
41.332001 65.678001 40.702 65.047997 40.702 64.269997 c
40.702 35.532001 l
40.702 34.751999 41.332001 34.119999 42.110001 34.119999 c
42.888 34.119999 43.52 34.751999 43.52 35.532001 c
43.52 48.490002 l
65.008003 48.490002 l
65.008003 35.532001 l
65.008003 34.751999 65.639999 34.119999 66.417999 34.119999 c
67.197998 34.119999 67.828003 34.751999 67.828003 35.532001 c
67.828003 64.269997 l
67.828003 65.047997 67.197998 65.678001 66.417999 65.678001 c
W*
0 0 408 100 rc
30.702 75.678001 m
77.828003 75.678001 l
77.828003 24.120001 l
30.702 24.120001 l
h
f
Q
q
0 100 m
408 100 l
408 0 l
0 0 l
h
0 100 m
W*
257.86401 64.269997 m
257.86401 65.047997 257.23199 65.678001 256.45401 65.678001 c
255.67599 65.678001 255.04401 65.047997 255.04401 64.269997 c
255.04401 39.380001 l
233.222 65.18 l
233.20799 65.194 233.192 65.199997 233.17799 65.213997 c
233.11 65.290001 233.026 65.344002 232.942 65.402 c
232.87 65.449997 232.81 65.505997 232.73599 65.540001 c
232.66 65.575996 232.578 65.585999 232.496 65.608002 c
232.39799 65.634003 232.304 65.664001 232.202 65.667999 c
232.18401 65.667999 232.166 65.678001 232.146 65.678001 c
232.078 65.678001 232.01801 65.650002 231.952 65.639999 c
231.856 65.625999 231.75999 65.615997 231.668 65.582001 c
231.57001 65.545998 231.48801 65.491997 231.40199 65.438004 c
231.34801 65.403999 231.28799 65.388 231.23599 65.346001 c
231.22 65.334 231.214 65.314003 231.202 65.300003 c
231.12399 65.232002 231.07001 65.146004 231.01199 65.061996 c
230.964 64.994003 230.91 64.933998 230.87601 64.860001 c
230.84 64.783997 230.828 64.699997 230.806 64.617996 c
230.782 64.519997 230.752 64.426003 230.748 64.325996 c
230.746 64.306 230.73599 64.290001 230.73599 64.269997 c
230.73599 35.532001 l
230.73599 34.751999 231.368 34.119999 232.146 34.119999 c
232.92599 34.119999 233.556 34.751999 233.556 35.532001 c
233.556 60.419998 l
255.37601 34.619999 l
255.388 34.605999 255.408 34.602001 255.42 34.588001 c
255.522 34.476002 255.644 34.391998 255.78 34.318001 c
255.81599 34.296001 255.84801 34.259998 255.888 34.243999 c
256.06201 34.167999 256.25201 34.119999 256.45401 34.119999 c
256.62799 34.119999 256.79999 34.16 256.966 34.223999 c
257.034 34.25 257.086 34.293999 257.14801 34.330002 c
257.22 34.369999 257.298 34.397999 257.36401 34.453999 c
257.37799 34.466 257.384 34.486 257.39801 34.5 c
257.474 34.568001 257.53 34.653999 257.58801 34.737999 c
257.63599 34.806 257.69199 34.866001 257.724 34.939999 c
257.76001 35.015999 257.772 35.099998 257.79199 35.183998 c
257.81799 35.279999 257.84799 35.374001 257.85199 35.473999 c
257.854 35.493999 257.86401 35.509998 257.86401 35.532001 c
257.86401 64.269997 l
W*
0 0 408 100 rc
220.73599 75.678001 m
267.86401 75.678001 l
267.86401 24.120001 l
220.73599 24.120001 l
h
f
Q
q
0 100 m
408 100 l
408 0 l
0 0 l
h
0 100 m
W*
178.368 36.924 m
162.314 36.924 l
162.314 48.037998 l
176.95799 48.037998 l
177.73599 48.037998 178.368 48.666 178.368 49.445999 c
178.368 50.226002 177.73599 50.855999 176.95799 50.855999 c
162.314 50.855999 l
162.314 62.956001 l
178.368 62.956001 l
179.146 62.956001 179.778 63.585999 179.778 64.365997 c
179.778 65.143997 179.146 65.776001 178.368 65.776001 c
160.90601 65.776001 l
160.12601 65.776001 159.496 65.143997 159.496 64.365997 c
159.496 35.514 l
159.496 34.736 160.12601 34.104 160.90601 34.104 c
178.368 34.104 l
179.146 34.104 179.778 34.736 179.778 35.514 c
179.778 36.293999 179.146 36.924 178.368 36.924 c
W*
0 0 408 100 rc
149.496 75.776001 m
189.778 75.776001 l
189.778 24.104 l
149.496 24.104 l
h
f
Q
q
0 100 m
408 100 l
408 0 l
0 0 l
h
0 100 m
W*
366.306 36.827999 m
350.254 36.827999 l
350.254 47.939999 l
364.896 47.939999 l
365.67599 47.939999 366.306 48.571999 366.306 49.349998 c
366.306 50.130001 365.67599 50.759998 364.896 50.759998 c
350.254 50.759998 l
350.254 62.860001 l
366.306 62.860001 l
367.086 62.860001 367.71399 63.490002 367.71399 64.269997 c
367.71399 65.047997 367.086 65.678001 366.306 65.678001 c
348.84399 65.678001 l
348.06601 65.678001 347.436 65.047997 347.436 64.269997 c
347.436 35.417999 l
347.436 34.638 348.06601 34.007999 348.84399 34.007999 c
366.306 34.007999 l
367.086 34.007999 367.71399 34.638 367.71399 35.417999 c
367.71399 36.198002 367.086 36.827999 366.306 36.827999 c
W*
0 0 408 100 rc
337.436 75.678001 m
377.71399 75.678001 l
377.71399 24.007999 l
337.436 24.007999 l
h
f
Q
0.28235295 0.73333335 0.88235295 sc
q
0 100 m
408 100 l
408 0 l
0 0 l
h
0 100 m
W*
105.652 52.726002 m
104.876 52.726002 104.242 53.358002 104.242 54.136002 c
104.242 64.269997 l
104.242 65.047997 104.876 65.678001 105.652 65.678001 c
106.432 65.678001 107.062 65.047997 107.062 64.269997 c
107.062 54.136002 l
107.062 53.358002 106.432 52.726002 105.652 52.726002 c
W*
0 0 408 100 rc
94.241997 75.678001 m
117.062 75.678001 l
117.062 42.726002 l
94.241997 42.726002 l
h
f
Q
q
0 100 m
408 100 l
408 0 l
0 0 l
h
0 100 m
W*
99.860001 34.076 m
82.222 34.076 l
81.444 34.076 80.811996 34.706001 80.811996 35.486 c
80.811996 36.264 81.444 36.894001 82.222 36.894001 c
99.860001 36.894001 l
102.28 36.894001 104.248 38.863998 104.248 41.284 c
104.248 43.702 102.28 45.669998 99.860001 45.669998 c
86.435997 45.669998 l
83.120003 45.669998 80.421997 48.368 80.421997 51.683998 c
80.421997 64.269997 l
80.421997 65.047997 81.052002 65.678001 81.830002 65.678001 c
82.610001 65.678001 83.239998 65.047997 83.239998 64.269997 c
83.239998 51.683998 l
83.239998 49.922001 84.674004 48.487999 86.435997 48.487999 c
99.860001 48.490002 l
103.834 48.490002 107.066 45.256001 107.066 41.284 c
107.066 37.307999 103.834 34.076 99.860001 34.076 c
W*
0 0 408 100 rc
70.421997 75.678001 m
117.066 75.678001 l
117.066 24.076 l
70.421997 24.076 l
h
f
Q
0.0078431377 0.25098041 0.40000001 sc
q
0 100 m
408 100 l
408 0 l
0 0 l
h
0 100 m
W*
137.65601 65.678001 m
121.12 65.678001 l
121.12 35.417999 l
121.12 34.638 121.752 34.007999 122.53 34.007999 c
123.308 34.007999 123.94 34.638 123.94 35.417999 c
123.94 47.307999 l
137.65601 47.307999 l
142.72 47.307999 146.842 51.428001 146.842 56.493999 c
146.842 61.560001 142.72 65.678001 137.65601 65.678001 c
137.65601 65.678001 l
h
137.65601 50.127998 m
123.94 50.127998 l
123.94 62.860001 l
137.65601 62.860001 l
141.168 62.860001 144.024 60.004002 144.024 56.493999 c
144.024 52.984001 141.168 50.127998 137.65601 50.127998 c
137.65601 50.127998 l
h
137.65601 50.127998 m
W*
0 0 408 100 rc
111.12 75.678001 m
156.842 75.678001 l
156.842 24.007999 l
111.12 24.007999 l
h
f
Q
q
0 100 m
408 100 l
408 0 l
0 0 l
h
0 100 m
W*
218.032 56.59 m
218.032 61.655998 213.91 65.776001 208.84801 65.776001 c
192.31 65.776001 l
192.31 35.514 l
192.31 34.736 192.942 34.104 193.718 34.104 c
194.498 34.104 195.12801 34.736 195.12801 35.514 c
195.12801 47.405998 l
201.356 47.405998 l
212.81599 34.576 l
213.09599 34.262001 213.48 34.104 213.868 34.104 c
214.202 34.104 214.536 34.222 214.806 34.462002 c
215.386 34.981998 215.436 35.872002 214.918 36.453999 c
205.134 47.405998 l
208.84801 47.405998 l
213.91 47.405998 218.032 51.526001 218.032 56.59 c
218.032 56.59 l
h
195.12801 62.956001 m
208.84801 62.956001 l
212.358 62.956001 215.21201 60.099998 215.21201 56.59 c
215.21201 53.080002 212.358 50.223999 208.84801 50.223999 c
195.12801 50.223999 l
195.12801 62.956001 l
195.12801 62.956001 l
h
195.12801 62.956001 m
W*
0 0 408 100 rc
182.31 75.776001 m
228.032 75.776001 l
228.032 24.104 l
182.31 24.104 l
h
f
Q
q
0 100 m
408 100 l
408 0 l
0 0 l
h
0 100 m
W*
284.806 65.598 m
281.95801 65.598 l
275.66199 65.598 270.54199 60.478001 270.54199 54.183998 c
270.54199 45.59 l
270.54199 39.296001 275.66199 34.175999 281.95801 34.175999 c
284.806 34.175999 l
291.10001 34.175999 296.22 39.296001 296.22 45.59 c
296.22 54.183998 l
296.22 60.478001 291.10001 65.598 284.806 65.598 c
284.806 65.598 l
h
293.51801 45.59 m
293.51801 40.787998 289.60999 36.880001 284.806 36.880001 c
281.95801 36.880001 l
277.15201 36.880001 273.246 40.787998 273.246 45.59 c
273.246 54.183998 l
273.246 58.987999 277.15201 62.896 281.95801 62.896 c
284.806 62.896 l
289.60999 62.896 293.51801 58.987999 293.51801 54.183998 c
293.51801 45.59 l
293.51801 45.59 l
h
293.51801 45.59 m
W*
0 0 408 100 rc
260.54199 75.598 m
306.22 75.598 l
306.22 24.176001 l
260.54199 24.176001 l
h
f
Q
q
0 100 m
408 100 l
408 0 l
0 0 l
h
0 100 m
W*
322.57401 65.582001 m
308.89801 65.582001 l
308.89801 34.082001 l
322.57401 34.082001 l
329.228 34.082001 334.64001 39.495998 334.64001 46.147999 c
334.64001 53.515999 l
334.64001 60.167999 329.228 65.582001 322.57401 65.582001 c
322.57401 65.582001 l
h
331.93201 46.147999 m
331.93201 40.987999 327.73401 36.790001 322.57401 36.790001 c
311.608 36.790001 l
311.608 62.874001 l
322.57401 62.874001 l
327.73401 62.874001 331.93201 58.675999 331.93201 53.515999 c
331.93201 46.147999 l
331.93201 46.147999 l
h
331.93201 46.147999 m
W*
0 0 408 100 rc
298.89801 75.582001 m
344.64001 75.582001 l
344.64001 24.082001 l
298.89801 24.082001 l
h
f
ep
end
%%Trailer
%%EOF
